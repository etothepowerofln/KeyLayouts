//this is a layout for CK61 and CK62 keyboards
//save this file in /usr/share/X11/xkb/symbols with other layouts
//then run setxkbmap -layout ck60 -option "lv3:ralt_switch, lv3:caps_switch, compose:menu" to activate

default  partial 
xkb_symbols "basic" {

////Esc line//////////////////////////////////////////////////////////////////////	
    key <AE01> { [    1,          exclam],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK01>, clearmods=LevelThree),
                  RedirectKey(key=<FK01>, clearmods=Shift+LevelThree)],
                  [onesubscript] };
    
    key <AE02> { [    2,              at],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK02>, clearmods=LevelThree),
                  RedirectKey(key=<FK02>, clearmods=Shift+LevelThree)],
                  [twosubscript] };
    
    key <AE03> { [    3,      numbersign],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK03>, clearmods=LevelThree),
                  RedirectKey(key=<FK03>, clearmods=Shift+LevelThree)],
                  [threesubscript] };
   
    key <AE04> { [    4,          dollar],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK04>, clearmods=LevelThree),
                  RedirectKey(key=<FK04>, clearmods=Shift+LevelThree)],
                  [foursubscript] };
    
    key <AE05> { [    5,         percent],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK05>, clearmods=LevelThree),
                  RedirectKey(key=<FK05>, clearmods=Shift+LevelThree)],
                  [fivesubscript] };
    
    key <AE06> { [    6, dead_circumflex],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK06>, clearmods=LevelThree),
                  RedirectKey(key=<FK06>, clearmods=Shift+LevelThree)],
                  [sixsubscript] };
    
    key <AE07> { [    7,       ampersand],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK07>, clearmods=LevelThree),
                  RedirectKey(key=<FK07>, clearmods=Shift+LevelThree)],
                  [sevensubscript] };
    
    key <AE08> { [    8,        asterisk],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK08>, clearmods=LevelThree),
                  RedirectKey(key=<FK08>, clearmods=Shift+LevelThree)],
                  [eightsubscript] };
    
    key <AE09> { [    9,       parenleft],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK09>, clearmods=LevelThree),
                  RedirectKey(key=<FK09>, clearmods=Shift+LevelThree)],
                  [ninesubscript, includedin] };
    
    key <AE10> { [    0,      parenright],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK10>, clearmods=LevelThree),
                  RedirectKey(key=<FK10>, clearmods=Shift+LevelThree)],
                  [zerosubscript, includes, emptyset] };
    
    key <AE11> { [minus,      underscore],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK11>, clearmods=LevelThree),
                  RedirectKey(key=<FK11>, clearmods=Shift+LevelThree)],
                  [ifonlyif, U21A6] };
    
    key <AE12> { [equal,            plus],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<FK12>, clearmods=LevelThree),
                  RedirectKey(key=<FK12>, clearmods=Shift+LevelThree)],
                  [ identical, notidentical, similarequal] };
    
    key <BKSP> { [Backspace,   Backspace],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<DELE>, clearmods=LevelThree),
                  RedirectKey(key=<DELE>, clearmods=LevelThree)] };

////Tab line//////////////////////////////////////////////////////////////////////
    key <AD01> { [q, Q],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<HOME>, clearmods=LevelThree),
                  RedirectKey(key=<HOME>, clearmods=LevelThree)],
                  [Greek_psi, Greek_PSI, U211A] };
    
    key <AD02> { [w, W],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<UP>, clearmods=LevelThree),
                  RedirectKey(key=<UP>, clearmods=LevelThree)],
                  [Greek_omega, Greek_OMEGA, U2127] };
    
    key <AD03> { [e, E],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<END>, clearmods=LevelThree),
                  RedirectKey(key=<END>, clearmods=LevelThree)],
                  [Greek_epsilon, Greek_EPSILON, U2203] };
    
    key <AD04> { [r, R],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<PGUP>, clearmods=LevelThree),
                  RedirectKey(key=<PGUP>, clearmods=LevelThree)],
                  [Greek_rho, Greek_RHO, U211D] };
    
    key <AD05> { [t, T],
                 [Greek_tau, Greek_TAU] };
    
    key <AD06> { [y, Y, includedin,     includes],
                 [Greek_theta, Greek_THETA] };
    
    key <AD07> { [u, U,      union, intersection],
                 [Greek_upsilon, Greek_UPSILON] };
    
    key <AD08> { [i, I,   infinity,     integral],
                 [Greek_iota, Greek_IOTA] };
    
    key <AD09> { [o, O,  masculine,  ordfeminine],
                 [Greek_omicron, Greek_OMICRON] };
    
    key <AD10> { [p, P],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<PRSC>, clearmods=LevelThree),
                  RedirectKey(key=<PRSC>, clearmods=LevelThree)],
                  [Greek_pi, Greek_PI, U220F] };
    
    key <AD11> { [ bracketleft,  braceleft,  leftsinglequotemark,  leftdoublequotemark ] };
    
    key <AD12> { [ bracketright, braceright, rightsinglequotemark, rightdoublequotemark ] };
    
    key <BKSL> { [   backslash,        bar,              notsign,            brokenbar ] };

////Caps line//////////////////////////////////////////////////////////////////////
    key <CAPS> { [ ISO_Level3_Shift ] };
    
    key <AC01> { [a, A],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<LEFT>, clearmods=LevelThree),
                  RedirectKey(key=<LEFT>, clearmods=LevelThree)],
                  [Greek_alpha, Greek_ALPHA, U2200, U2135] };
    
    key <AC02> { [s, S],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<DOWN>, clearmods=LevelThree),
                  RedirectKey(key=<DOWN>, clearmods=LevelThree)],
                  [Greek_sigma, Greek_SIGMA, Greek_finalsmallsigma] };
    
    key <AC03> { [d, D],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<RGHT>, clearmods=LevelThree),
                  RedirectKey(key=<RGHT>, clearmods=LevelThree)],
                  [Greek_delta, Greek_DELTA, partialderivative, nabla] };
    
    key <AC04> { [f, F],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<PGDN>, clearmods=LevelThree),
                  RedirectKey(key=<PGDN>, clearmods=LevelThree)],
                  [Greek_phi, Greek_PHI, U03D5] };
    
    key <AC05> { [g, G],
                 [Greek_gamma, Greek_GAMMA] };
    
    key <AC06> { [h, H],
                 [Greek_eta, Greek_ETA, U210F, U210B] };
    
    key <AC07> { [j, J] };
    
    key <AC08> { [k, K],
                 [Greek_kappa, Greek_KAPPA] };
    
    key <AC09> { [l, L],
                 [Greek_lambda, Greek_LAMBDA, U2113] };
    
    key <AC10> { [ semicolon,          colon,  paragraph,   degree] };
    
    key <AC11> { [dead_acute, dead_diaeresis, apostrophe, quotedbl],
                 [doublelowquotemark] };
    
    key <RTRN> { [Return, Return],
       actions = [NoAction(),
                  NoAction(),
                  RedirectKey(key=<INS>, clearmods=LevelThree),
                  RedirectKey(key=<INS>, clearmods=LevelThree)] };

////Shift line//////////////////////////////////////////////////////////////////////
    key <AB01> { [z, Z],
                 [Greek_zeta, Greek_ZETA, U2124] };
    
    key <AB02> { [x, X],
                 [Greek_xi, Greek_XI, U2297, U2A02] };
    
    key <AB03> { [c, C, ccedilla, Ccedilla],
                 [None, None, U2102] };
    
    key <AB04> { [v, V, logicalor, logicaland],
                 [squareroot, U25CA] };
    
    key <AB05> { [b, B, elementof, notelementof],
                 [Greek_beta, Greek_BETA] };
    
    key <AB06> { [n, N],
                 [Greek_nu, Greek_NU, U2115] };
    
    key <AB07> { [m, M],
                 [Greek_mu, Greek_MU] };
    
    key <AB08> { [     comma,       less,   dead_cedilla,  leftanglebracket] };
    
    key <AB09> { [    period,    greater, periodcentered, rightanglebracket] };
    
    key <AB10> { [     slash,   question,   questiondown,     exclamdown] };
    
    key <RTSH> { [dead_grave, dead_tilde,          grave,     asciitilde] };
    
////Ctrl line//////////////////////////////////////////////////////////////////////
    key <RALT> { [ ISO_Level3_Shift ] };
    
    key <RWIN> { [ Multi_key ] };
    
    key <RCTL> { [ Mode_switch ] };
    
};

    
